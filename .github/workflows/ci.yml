name: CI
on: [push, pull_request]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Verify formatting
      run: cargo fmt --all --check

    - name: Code analysis
      run: cargo clippy -- --deny=warnings

  embedded:
    name: Embedded
    runs-on: ubuntu-latest
    needs: analyze

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.78
          - stable
          - nightly
        target:
          - thumbv7em-none-eabi
          - thumbv7m-none-eabi
          - thumbv6m-none-eabi
          - thumbv7em-none-eabihf
          - thumbv8m.main-none-eabihf

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}

    - name: Check
      run: cargo check --workspace --target ${{ matrix.target }} --exclude dsdl  --exclude cyphal-dsdl --exclude cyphal-socketcan --exclude cyphal-udpsocket

  linux:
    name: Linux
    runs-on: ubuntu-latest
    needs: analyze

    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.78
          - stable
          - nightly
        target:
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.toolchain }}
        target: ${{ matrix.target }}

    - name: Check
      run: cargo check --all-targets

    - name: Run tests
      run: cargo test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [embedded, linux]
    if: startsWith(github.event.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: Publish cyphal package
      run: cargo publish --package cyphal --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-can package
      run: cargo publish --package cyphal-can --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-bxcan package
      run: cargo publish --package cyphal-bxcan --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-fdcan package
      run: cargo publish --package cyphal-fdcan --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-socketcan package
      run: cargo publish --package cyphal-socketcan --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-udp package
      run: cargo publish --package cyphal-udp --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-udpsocket package
      run: cargo publish --package cyphal-udpsocket --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish cyphal-dsdl package
      run: cargo publish --package cyphal-dsdl --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

    - name: Publish dsdl package
      run: cargo publish --package dsdl --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
